LIBC_FILES=./ostrich-libc
INCLUDE_DIR=$(LIBC_FILES)/include
LIB_DIR=$(LIBC_FILES)/lib
LINKER_SCRIPT=app.ld
TOOLCHAIN_PREFIX=aarch64-elf

CC=$(TOOLCHAIN_PREFIX)-gcc
LD=$(TOOLCHAIN_PREFIX)-ld
OBJCOPY=$(TOOLCHAIN_PREFIX)-objcopy

CFLAGS=-Wall -Wextra -I$(INCLUDE_DIR) -g \
       -mcpu=cortex-a53 -march=armv8-a+crc -mstrict-align -mno-outline-atomics \
       -fno-exceptions

# Used when a stdlib is not present (it is now ðŸ˜Ž)
# -no-stdlib
# -ffreestanding
	
LDFLAGS=-z max-page-size=0x1000 -L $(LIB_DIR) 
# -T $(LINKER_SCRIPT), when we want to use our own linker script
# -latomic, for a library (.a / .so) called "atomics

all: user_prog

user_prog.o: user_prog.c
	$(CC) $(CFLAGS) -c user_prog.c -o user_prog.o

newlib_stubs.o: newlib_stubs.S
	$(CC) $(CFLAGS) -c newlib_stubs.S -o newlib_stubs.o	

user_prog: $(LIB_DIR)/crt0.o user_prog.o newlib_stubs.o
	$(LD) $(LDFLAGS) -o user_prog $(LIB_DIR)/crt0.o user_prog.o newlib_stubs.o -lc

clean:
	rm -f user_prog.o user_prog 